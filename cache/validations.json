{
  "version": "3.2",
  "log": [
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:18",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:17",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:8",
        "version": {
          "withMetadata": "fde3f15d183e5e4adb501d42de9202b654fb1ba86f54e91669d295220ea9dc67",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:16",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:31",
        "version": {
          "withMetadata": "d97ce47a76206ff30e04246fd1439c8c09a0fbbdda81ab79e81107994b19dce6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "995abfd5901dc380f3fed9da99f86b86b04d5a1bbe1a1ce59071222e12ce57ec",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:8",
        "version": {
          "withMetadata": "26611e32a15a00144207b601573c8db0b03bac6851e9edb16d9974217ed40294",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:15",
        "version": {
          "withMetadata": "0023e734e710c06754cbf37a92d68bb6f42a4cc6d154a145d945ec780b06c2f2",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IMigratorChef": {
        "src": "contracts/Farm.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "migrate(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "MasterCRP": {
        "src": "contracts/Farm.sol:36",
        "version": {
          "withMetadata": "75c6ce9bde062160c12e752dadfd25e5c1c8ef58f8d567908b544b6487366801",
          "withoutMetadata": "e738e68f06133f61f887e1126bf5756763b178c55d527eef9e6a5b24bed96d2e",
          "linkedWithoutMetadata": "e738e68f06133f61f887e1126bf5756763b178c55d527eef9e6a5b24bed96d2e"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "PausableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMath",
          "SafeBEP20"
        ],
        "methods": [
          "initialize(address,uint256,uint256,address)",
          "updateMultiplier(uint256)",
          "poolLength()",
          "add(uint256,address,bool)",
          "set(uint256,uint256,bool)",
          "setMigrator(address)",
          "migrate(uint256)",
          "getMultiplier(uint256,uint256)",
          "pendingCRP(uint256,address)",
          "massUpdatePools()",
          "updatePool(uint256)",
          "deposit(uint256,uint256)",
          "withdraw(uint256,uint256)",
          "compound()",
          "emergencyWithdraw(uint256)",
          "pause()",
          "unpause()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "MasterCRP",
              "label": "CRP",
              "type": "t_contract(IBEP20)3872",
              "src": "contracts/Farm.sol:66"
            },
            {
              "contract": "MasterCRP",
              "label": "CRPPerBlock",
              "type": "t_uint256",
              "src": "contracts/Farm.sol:68"
            },
            {
              "contract": "MasterCRP",
              "label": "BONUS_MULTIPLIER",
              "type": "t_uint256",
              "src": "contracts/Farm.sol:70"
            },
            {
              "contract": "MasterCRP",
              "label": "migrator",
              "type": "t_contract(IMigratorChef)2520",
              "src": "contracts/Farm.sol:72"
            },
            {
              "contract": "MasterCRP",
              "label": "wallet",
              "type": "t_contract(MasterCRPWallet)3794",
              "src": "contracts/Farm.sol:74"
            },
            {
              "contract": "MasterCRP",
              "label": "poolInfo",
              "type": "t_array(t_struct(PoolInfo)2550_storage)dyn_storage",
              "src": "contracts/Farm.sol:77"
            },
            {
              "contract": "MasterCRP",
              "label": "userInfo",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)2540_storage))",
              "src": "contracts/Farm.sol:79"
            },
            {
              "contract": "MasterCRP",
              "label": "totalAllocPoint",
              "type": "t_uint256",
              "src": "contracts/Farm.sol:81"
            },
            {
              "contract": "MasterCRP",
              "label": "startBlock",
              "type": "t_uint256",
              "src": "contracts/Farm.sol:83"
            },
            {
              "contract": "MasterCRP",
              "label": "totalRewardDebt",
              "type": "t_uint256",
              "src": "contracts/Farm.sol:85"
            }
          ],
          "types": {
            "t_contract(IBEP20)3872": {
              "label": "contract IBEP20"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_contract(IMigratorChef)2520": {
              "label": "contract IMigratorChef"
            },
            "t_contract(MasterCRPWallet)3794": {
              "label": "contract MasterCRPWallet"
            },
            "t_array(t_struct(PoolInfo)2550_storage)dyn_storage": {
              "label": "struct MasterCRP.PoolInfo[]"
            },
            "t_struct(PoolInfo)2550_storage": {
              "label": "struct MasterCRP.PoolInfo",
              "members": [
                {
                  "label": "lpToken",
                  "type": "t_contract(IBEP20)3872"
                },
                {
                  "label": "allocPoint",
                  "type": "t_uint256"
                },
                {
                  "label": "lastRewardBlock",
                  "type": "t_uint256"
                },
                {
                  "label": "accCRPPerShare",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)2540_storage))": {
              "label": "mapping(uint256 => mapping(address => struct MasterCRP.UserInfo))"
            },
            "t_mapping(t_address,t_struct(UserInfo)2540_storage)": {
              "label": "mapping(address => struct MasterCRP.UserInfo)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(UserInfo)2540_storage": {
              "label": "struct MasterCRP.UserInfo",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256"
                },
                {
                  "label": "rewardDebt",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "LPToken1": {
        "src": "contracts/LPTokens.sol:7",
        "version": {
          "withMetadata": "f7a7919a24a843a3ef65eec6874f4a28c1b5e2f6342bfb9d4ed3b64895ffdae1",
          "withoutMetadata": "38f5c88e7b0602da6944e9884df39901c326a1f6b9e12547fc12dc77c53f3866",
          "linkedWithoutMetadata": "38f5c88e7b0602da6944e9884df39901c326a1f6b9e12547fc12dc77c53f3866"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "LPToken1",
            "src": "contracts/LPTokens.sol:8"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "LPToken2": {
        "src": "contracts/LPTokens.sol:13",
        "version": {
          "withMetadata": "282cd12f9f2ad3c955b416adc8c67c6a2348e60d14f7b8a7a1631d7782f4b0d8",
          "withoutMetadata": "cc4057acd81071cc9433421474f5802c561529a438297851820615cad6cc3305",
          "linkedWithoutMetadata": "cc4057acd81071cc9433421474f5802c561529a438297851820615cad6cc3305"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "LPToken2",
            "src": "contracts/LPTokens.sol:14"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "MasterCRPWallet": {
        "src": "contracts/MasterCRPWallet.sol:8",
        "version": {
          "withMetadata": "07a9f10f2a0785d32f5c3a0a76a170ec77dcb62d284104a7ea8e989d44fcc105",
          "withoutMetadata": "472170fd5d90029b10b5e4cdf780cebf5886b4cab4e92bd9165f7eb4c723fd31",
          "linkedWithoutMetadata": "472170fd5d90029b10b5e4cdf780cebf5886b4cab4e92bd9165f7eb4c723fd31"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeBEP20"
        ],
        "methods": [
          "(address)",
          "setMasterCRP(address)",
          "safeCRPTransfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MasterCRPWallet",
            "src": "contracts/MasterCRPWallet.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "MasterCRPWallet",
              "label": "CRP",
              "type": "t_contract(IBEP20)3872",
              "src": "contracts/MasterCRPWallet.sol:11"
            },
            {
              "contract": "MasterCRPWallet",
              "label": "MasterCRP",
              "type": "t_address",
              "src": "contracts/MasterCRPWallet.sol:12"
            }
          ],
          "types": {
            "t_contract(IBEP20)3872": {
              "label": "contract IBEP20"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBEP20": {
        "src": "contracts/interfaces/IBEP20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeBEP20": {
        "src": "contracts/utils/SafeBEP20.sol:17",
        "version": {
          "withMetadata": "b6a287dcfd3237f5abb3d18109e2a8869e762a661c81a43a429580b339f5a36c",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "CROPredict": {
        "src": "contracts/CRP.sol:328",
        "version": {
          "withMetadata": "6d75185588659a49d42e172c5f18554bfd5b7fdc38a5cb9269c51b17f2538ccc",
          "withoutMetadata": "6b80cf22466ea9f51107e39df396b6f2e892520daa298037df789e595102eeae",
          "linkedWithoutMetadata": "6b80cf22466ea9f51107e39df396b6f2e892520daa298037df789e595102eeae"
        },
        "inherit": [
          "Ownable",
          "IBEP20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "()",
          "getOwner()",
          "decimals()",
          "symbol()",
          "name()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "burn(uint256)",
          "_burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CROPredict",
            "src": "contracts/CRP.sol:340"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "CROPredict",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/CRP.sol:331"
            },
            {
              "contract": "CROPredict",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/CRP.sol:333"
            },
            {
              "contract": "CROPredict",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/CRP.sol:335"
            },
            {
              "contract": "CROPredict",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/CRP.sol:336"
            },
            {
              "contract": "CROPredict",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/CRP.sol:337"
            },
            {
              "contract": "CROPredict",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/CRP.sol:338"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "contracts/CRP.sol:105",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBEP20": {
        "src": "contracts/CRP.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "decimals()",
          "symbol()",
          "name()",
          "getOwner()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "src": "contracts/CRP.sol:281",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/CRP.sol:289"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/CRP.sol:282"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "contracts/CRP.sol:133",
        "version": {
          "withMetadata": "017a2be96a65098ede4aecdba6c35982d2b8d02034aea382b4a91a30e40edcc7",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    }
  ]
}